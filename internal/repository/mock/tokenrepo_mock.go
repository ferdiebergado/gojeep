// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ferdiebergado/gojeep/internal/repository (interfaces: TokenRepo)
//
// Generated by this command:
//
//	mockgen -destination=mock/tokenrepo_mock.go -package=mock . TokenRepo
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockTokenRepo is a mock of TokenRepo interface.
type MockTokenRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRepoMockRecorder
	isgomock struct{}
}

// MockTokenRepoMockRecorder is the mock recorder for MockTokenRepo.
type MockTokenRepoMockRecorder struct {
	mock *MockTokenRepo
}

// NewMockTokenRepo creates a new mock instance.
func NewMockTokenRepo(ctrl *gomock.Controller) *MockTokenRepo {
	mock := &MockTokenRepo{ctrl: ctrl}
	mock.recorder = &MockTokenRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenRepo) EXPECT() *MockTokenRepoMockRecorder {
	return m.recorder
}

// SaveToken mocks base method.
func (m *MockTokenRepo) SaveToken(ctx context.Context, id, email string, ttl time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveToken", ctx, id, email, ttl)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveToken indicates an expected call of SaveToken.
func (mr *MockTokenRepoMockRecorder) SaveToken(ctx, id, email, ttl any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveToken", reflect.TypeOf((*MockTokenRepo)(nil).SaveToken), ctx, id, email, ttl)
}
